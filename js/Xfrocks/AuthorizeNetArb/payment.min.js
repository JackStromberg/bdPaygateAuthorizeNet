'use strict';((k,l)=>{XF.AuthorizeNetArb_PayForm=XF.Element.newHandler({options:{apiLoginId:null,hiddenInputSelector:"[name=opaque_data]",cardNotAcceptedSelector:null,acceptedCards:null,phrasePreparing:null,phraseProcessing:null,progressTextSelector:null,publicClientKey:null},xhr:null,init:function(){if(this.options.apiLoginId)if(this.options.publicClientKey)if(this.hiddenInput=this.target.querySelector(this.options.hiddenInputSelector)){this.progressText=this.target.querySelector(this.options.progressTextSelector);
this.cardNotAcceptedText=this.target.querySelector(this.options.cardNotAcceptedSelector);if(this.options.acceptedCards.length>0)XF.on(this.target.querySelector('input[rel="card-number"]'),"change",this.validateCardNumber.bind(this));XF.on(this.target,"ajax-submit:before",this.onBeforeAjaxSubmit.bind(this));XF.on(this.target,"ajax-submit:always",this.onBeforeAjaxAlways.bind(this));XF.on(this.target,"submit",this.onSubmit.bind(this))}else console.error("Form must contain a data-hidden-input-selector attribute.");
else console.error("Form must contain a data-public-client-key attribute.");else console.error("Form must contain a data-api-login-id attribute.")},validateCardNumber:function(a){const c={amex:/^3[47][0-9]{13}$/,diners_club:/^3(?:0[0-5]|[68][0-9])[0-9]{11}$/,discover:/^6(?:011|5[0-9]{2})[0-9]{12}$/,enroute:/^(?:2014|2149)\d{11}$/,jcb:/^(?:2131|1800|35\d{3})\d{11}$/,mastercard:/^5[1-5][0-9]{14}$/,visa:/^4[0-9]{12}(?:[0-9]{3})?$/};var b=Object.keys(c).find(e=>c[e].test(a.target.value));b&&this.options.acceptedCards.includes(b)?
(a.target.style.borderColor="",this.cardNotAcceptedText.textContent=""):(a.target.style.borderColor="red",console.log(XF.phrases),b={amex:XF.phrase("amex"),diners_club:XF.phrase("diners_club"),discover:XF.phrase("discover"),enroute:XF.phrase("enroute"),jcb:XF.phrase("jcb"),mastercard:XF.phrase("mastercard"),visa:XF.phrase("visa")}[b]||XF.phrase("card_unsupported"),this.cardNotAcceptedText.textContent=XF.phrase("not_accepted",{"{friendlyCardType}":b}))},onBeforeAjaxSubmit:function(a){if(this.hiddenInput.value)return this.progressText.textContent=
this.options.phraseProcessing,!0;a.preventDefault()},onBeforeAjaxAlways:function(){this.hiddenInput.value="";this.progressText.textContent=""},onSubmit:function(a){if(this.hiddenInput.value)return!0;a.preventDefault();a={};const c={},b={},e=(h,g,f=g)=>{var d=this.target.querySelector(`input[rel="${f}"]`);d=d?d.value:null;d||(d=(f=this.target.querySelector(`select[rel="${f}"]`))?f.value:null);d&&(h[g]=d)};e(b,"cardNumber","card-number");e(b,"month");e(b,"year");e(b,"cardCode","card-code");a.cardData=
b;c.apiLoginID=this.options.apiLoginId;c.clientKey=this.options.publicClientKey;a.authData=c;this._callAjaxSubmit("disableButtons");this.progressText.textContent=this.options.phrasePreparing;Accept.dispatchData(a,this.onAcceptJsResponse.bind(this))},onAcceptJsResponse:function(a){this.progressText.textContent="";this._callAjaxSubmit("enableButtons");a.messages?.resultCode==="Error"?({messages:a}=a,a=a.message.map(c=>{console.error(`${c.code}: ${c.text}`);return c.text}),XF.alert(a.join("\r\n"))):
(this.hiddenInput.value=JSON.stringify(a.opaqueData),a=new Event("submit",{bubbles:!0,cancelable:!0}),this.target.dispatchEvent(a))},_callAjaxSubmit:function(a,c){var b=this.target.dataset.xfElementHandlers?JSON.parse(this.target.dataset.xfElementHandlers):null;if(b&&b["ajax-submit"])return b=b["ajax-submit"],b[a].apply(b,c)}});XF.Element.register("authorizenet-payment-form","XF.AuthorizeNetArb_PayForm")})(window,document);